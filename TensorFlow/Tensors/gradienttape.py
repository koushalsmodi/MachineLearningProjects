# -*- coding: utf-8 -*-
"""GradientTape.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vguRsm_Oyq5j9ZDekD4wpj5EqFgg2PXN
"""

import tensorflow as tf
x = tf.Variable(0.)
with tf.GradientTape() as tape:
  y = 2*x + 3
grad_of_y_wrt_x = tape.gradient(y,x)

print(grad_of_y_wrt_x) # tf.Tensor(2.0, shape=(), dtype=float32)

# The GradientTape works with tensor operations
x = tf.Variable(tf.random.uniform((2,2)))
with tf.GradientTape() as tape:
  y = 2*x + 3
grad_of_y_wrt_x = tape.gradient(y,x)
print(grad_of_y_wrt_x)

"""
tf.Tensor(
[[2. 2.]
 [2. 2.]], shape=(2, 2), dtype=float32)
"""

# Working with a list of variables
import math
W = tf.Variable(tf.random.uniform((2,2)))
b = tf.Variable(tf.zeros((2,)))
x = tf.Variable(tf.random.uniform((2,2)))

with tf.GradientTape() as tape:
  y = tf.matmul(x,W) + b
grad_of_y_wrt_W_and_b = tape.gradient(y, [W,b])

print(grad_of_y_wrt_W_and_b[0])
"""
tf.Tensor(
[[0.47095418 0.47095418]
 [1.3558946  1.3558946 ]], shape=(2, 2), dtype=float32)
"""
print()
print(grad_of_y_wrt_W_and_b[1]) # tf.Tensor([2. 2.], shape=(2,), dtype=float32)

